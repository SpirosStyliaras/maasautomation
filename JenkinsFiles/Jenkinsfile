pipeline{
    parameters {
        string(name: 'MAAS_SERVER', defaultValue: 'spiros-desktop-maas', description: 'MAAS server')
        string(name: 'MAAS_MACHINE', defaultValue: '', description: 'MAAS enlisted machine for commission and deployment')
        string(name: 'MAAS_MACHINE_HOSTNAME', defaultValue: '', description: 'Commissioned MAAS machine hostname')
        }
    agent none
    stages{
        stage('MAAS Machine Commission'){
            agent { label 'master' } 
            steps{
                    echo "::: Started commissioning MAAS Machine ${params.MAAS_MACHINE}"
                    echo "::: Create Python virtualenv"
                    sh "python3 -m venv maasautomationVenv" 
                    echo "::: Upgrade pip and install Python requirements and execute Robot task"
                    sh  """
                        . maasautomationVenv/bin/activate
                        pip install --upgrade pip
                        pip install -r pip_requirements.txt --quiet
                        """
                    echo "::: Execute Robot Task"
                    sh "rm -rf logs"
                    sh  """
                        . maasautomationVenv/bin/activate
                        export PYTHONPATH=libraries/
                        robot --loglevel TRACE:DEBUG --outputdir logs --timestampoutputs --variable MAAS_SERVER:${params.MAAS_SERVER} \
                        --variable MAAS_MACHINE:${params.MAAS_MACHINE} \
                        --variable MAAS_MACHINE_HOSTNAME:${params.MAAS_MACHINE_HOSTNAME} \
                        --test tasks.maas_commission_deploy.Commission_MAAS_Machine tasks
                        """    
                    }
            post {
                always {
                    archiveArtifacts artifacts: 'logs/log-*.html, logs/report-*.html, logs/output-*.xml', fingerprint: false, allowEmptyArchive: true, onlyIfSuccessful: false
                        }
                    }
                }
        stage('MAAS Machine Deploy'){
            agent { label 'master' } 
            steps{
                    echo "::: Started deploying MAAS Machine ${params.MAAS_MACHINE}"
                    echo "::: Create Python virtualenv"
                    sh "python3 -m venv maasautomationVenv" 
                    echo "::: Upgrade pip and install Python requirements and execute Robot task"
                    sh  """
                        . maasautomationVenv/bin/activate
                        pip install --upgrade pip
                        pip install -r pip_requirements.txt --quiet
                        """
                    echo "::: Execute Robot Task"
                    sh "rm -rf logs"
                    sh  """
                        . maasautomationVenv/bin/activate
                        export PYTHONPATH=libraries/
                        robot --loglevel TRACE:DEBUG --outputdir logs --timestampoutputs --variable MAAS_SERVER:${params.MAAS_SERVER} \
                        --variable MAAS_MACHINE:${params.MAAS_MACHINE} \
                        --test tasks.maas_commission_deploy.Deploy_MAAS_Machine tasks
                        """    
                    }
            post {
                always {
                    archiveArtifacts artifacts: 'logs/log-*.html, logs/report-*.html, logs/output-*.xml', fingerprint: false, allowEmptyArchive: true, onlyIfSuccessful: false
                    }
                }
            }
        }
    }
